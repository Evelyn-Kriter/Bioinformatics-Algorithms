import itertools
import numpy as np

sample_string1 = "KFWIIIKLCYTTPEDMDCVWDNNKMVMEPWKRDCTVHHINRSGIKDMVCYFGDSQIRWPFSGIQHICKQWLETFWDKICEPHSWYNVMCPFHRIFCDYWNCHACLKNQCYQNWKHPMMREDEEGGRVVINSCNAGFIGFVDHCYTDDVPHRQAHDHMFSFVFMPNTYDIRDYNDLTAGMCHMQMDKIPWWDWCWYNVHYLRFWWVDHDSRVAHSMDEGHLKDWMWGNWVGCCGRLTEYGKPGKAILCSHEESVNNCQANHMLEVWWHVTDGCVAYLQAPARIILFQSGGQFWCYALDQIFCLDGASWATFTRVCWGFNANMEPWPQRWPMNFVLGQGWWQWTCAGWAMRKFMDNLRTGMTPFNVHNSHDDLDWQTPHAGVKDHPCKALDITWYVFYRGSQGWEVDTTGGVDWNEHILHTVVIKRLVKDVHKNKMWFGVRHYNYINPHWSLPKCCFKLEKHHDEVFSVWTSKCPNGCPGKATPFGMQCDCNRNMPFPHFINYSLDHNHKCMPQAFEWWTNHHWNPHKCWIMGNCNAVKRQLQSWTMILVHLRLIGKISVRSYNEEVRWCFLKARPMPWHGHTSVCMIDTSDSMQHRCDTDGCGFSRFYMHWGWTMYWDPGSNRHKMSSLNPYWKILIPWAERLWMPRVGKMKACGPEEKVKSGWGSYPTRAPACKKMPPGVDLKPGEEQCYLNRHCKKCWEPKHYPIGKHFMRWEMLAQRRQVCSFEWFLLYKFFPDKWHGVSRVTDYGWKRHNEDMVVWCHQGDNYAGKKLQSRGSRWDQQCSATATYTNEEARSNHDDYEVFRPHPRSKIEGSETKCGCQAMMHTPSYMPELDYCFMGGRGADGQELSENWQWIDQRNYNWMSRTDYQGWRTWYIIDVGSMLKFQVIPPITVAPFRMVPAPLFGLNGQMKEPPYIDNIADPCPNEPPIYLPWGNKFQAITINDPISIWSLTHPGNGAVVVGEHQGTKWAMGAEKCAYYSYVDWCKVEWLEVDEYDELECNWFRMSWLCWQGTMSNYNEWHHLLRNWSVSMGVPPGPTHERGWWIMTSNIVDLCHYWKGQDPVWTSNMVKKVLLRPIPEDKSDRIEAPHATSPKGLAKENNVAHAHTYCLKQCSPHHLDVFTEHHCWEITCACPMRCHYSDLHIKGKVLWNMTTDHEWSEWFICWQWRQEIICLIKRQCIRRHSARVGSDEKWEEGAGRDICNKLNQVHQQTIEVCNLFKIGIAQVIVDRAMKFLQVTLSENKAKQYKPQNNETFQKCYMKHVWMERTHVYYEYYWSLWPCFMVSAFGLSNFNYTSDDWWRRFFAIMDHSDHTLAVVRCENEWDCFNCTYHAWMQCQGVHEPNDFSEQVDFDLGPPPHYISFTDSHIKEVKYCAHYTVHYVDSKEYHEQWRKLGHVPREQRDFICFPEWKSGYSSHDDPWVLQILNYLYIDACYCILFHVGFVRPFYTFRMCVTIEAKVIQKWIVHEFAVLCIKEKEIGNFSQNFPTAQSEMIFTVRCVAGHTLMLWAKRNLNAELPHECMEYSHMSFILMEYYPNKMHTITPLRWNCAQWNHMDQTHAITCFLMKTLDSCMAHIYGHVQAESSCYDNEILQLTVISEMDYWNCQQYKPYDANFYEMVIMPEQSSDWKFRTIHFCTALMRANLYLRAHGFGMSVYAPFNVNPVKMPNCQPYQKHRGSLYVNWYGMTKGPQIVAFFKNNNMYHHNLKMYGPFKGYMPGLRDGKIAYLMEGIYRWKRVNVSRMHSHDMRFARSWTDAEDFDDWDRSQQRLMIKEEPHYWLDEHASPFYARYLHIQRNYSSYQCAHWVTQLWRKEHYGHESTEAEGDKNIFHQWLYIMKGMFMIWKRFQHGDGSEDDEHMGITKCMWLAEWVHDEQQFSTIKKYVTDYVKCWVHQHKKVHIDKIHNRATYAEYIFGDNTLCQMDVLSLQLEDISHHPLPGMPKYETAYQLGEMTACMEPNIQNTWKVLVTWGREHTVFRVRNPCIRWRRNRRLLCIRWFYAEFNWQDHIFYMRLGGPMCPMKEKFGPPRCHFMREVWFNDDLENSHEYGYPDIFPMQPFSKTVGQVVAFMHDKHGNLRCQGEIEMKMKPIENCRCGVVNSNMHYAVTAGWFTKTKGFVMEQTGCNHSARQRKDTEANHHDLAGFVCPKMWTSLNRIHKAWFLYKQEDLLYYNMAVPYAVELAWNPGGMYLFRTFYYLYAHREQRHNWDRLAGMHLGKFQMRSSDYGAFCRCHEYLPGTTRGSQRPDLSAYSWAMCVILFSAYRHYRPWDRQPLASWDDARGYAQLIHGYYTTWMVHNFTDMSAQDTMCVGRTPVPQKNGATSKLSRWDWTKLTPGDDCFHYCNTRWNLPGRTTKDSGMRSHGHVRGCKYRSEVRFERWAHNSCWMHTIACEAIDDEGAHGTQRTMKVHPGIHMLREASCISYYEWAYMQRMMTVNNMVCGMCYTFNECTRKGPLFMRSFWHVVWSLMSIVSRDFWRIFFGKLGEHMLRMMTYACTYCNAADAEPCQHLADNTQDINYIQYLMRASIGKPQWWDHEVHATPMQSMVLHDGQCKHCSYQVFYTENNMGDRPFMIHFVQWNSSLRVAPRGDQHAWDLIHRVLKLIAVTFDKHFDNGSRPQFAYIMWYDRGEWRWPYHWWWFKKNWTNITCREGYNNHDHHSSDCEFETPWLPCYDAKNGMHAGDWKNVTIPQGCAPHTKESWYRAVKDMERMHQWNIVSTEWDFSHQPADWFTFLGHYRNWITATITVRALPRLGMQITQWNSYWYIVMDKEVMKAAPEIVENWHMEQDETVRMSYNFKQPTWVYGSAGIEGKRRRSCDVSSRVIATIHSDDGLPHPKATVSFMAQIECVKWWNKHFFNDHIQWAWFICMDEPILVGDISGYTLQGIEINCRPETVTVHQALAVLMWLEYVFIYNNMSAWVKTIWKKCDKAFSGKMEWKGPSYMLYTQDGFWGFVPRSMTDCYGNVLPAMSWGKVMRGTRFQQQPQWSIFQYGGFTFPDKFMSMLFTFEDEMTEVMTFGLIEPNNHFEFQPSYKRGIVLFKKAFPAVLVWYARYVFVNLVFLVFEHCIFCFDENFGSMVKGSISWTRNHRPAWQGARASWDPLPNSGAWFGHCYRNKWQYDKLHHNPARWGHKQKESLAYPWQQNTCESGINYIKTRHVWEATPYEYCNVLMRRSEFVYWDQISYNRNRPAAAPSSFGIVWRMSFHRQTAGIIKRMQTWYRWILIMNDYNVRPFWHEIGSIHMRMHVGVFGHCKCNWQKGSKMAYFRPKLRPGGGLSIREPTPAEEYFQYWVQRGFGNTFKSSAGAQGCTMRENNYTMEDCTSQKANGPWRPTPTSWTGYQMWNMLEPYSVPHEGKACYVHLSQDSEHAAQFWMFVDMNKWCVWSCKWTIHCEDAMYCKLIHLMRNTAQSCCDDAYSYRKCHHFPGSYPCEWADAWCTFWRTYFQKNPASENFHAEHTCFCYVMLLTREVLNKMHPLKKWYVQNWMMDWIYCEEGKPYGKYMKRKPSSWVFVYVCHGLKSMKCFFCHMGMCMLGWHYVLVCPMWVIKDWTALCTHWTVNCTPGWITPQQCHCNMWFQMVQGRGSEHGFLQCGVVEPEEDNQQIKSGQIQKHEEDIAETQFETAICQPDCVDVAQAGIMHCVPLCRQRKQHEQNRSGCFISIKFVVYHILFSPDNSEWKDKYEVQVYAANNGVNIRFKMQPSTVCTVLGIGYIISTTMKECFCDPAMTNSWKWPRDPIRKRLAPNQNALPNTYIIQPWGIMVDLADHHQSAFAYSHGSSLIRWFFHR"
sample_string2 = "KFWSIIKDMDDNRCTVEINWSGIKDMVCYFGMMEVNQNFSQIRWPSSCAIQHICFIKICIPHWYNVMCRFHRIWNCHEMSIHWLKAKNQCYQNWKHIWFQREDDTDCEDFQHRGGRVVINSCNAFVAHCQEIDWFTVFSLPNPGPNTYDIRDYNDLTRGLCHVQMDKIPWWDACHVCACWYNVHYLRWSKKWVDHDSRVTHSMDEVTRCAHFALKDWKWVGCCGRYLEYTVITGTEYGKPGKAAFKSHEESVNSYFHMFELKWTVAPATIILFQSVGQFWHYDGASWATFCWTGSSVIRVCWGFNANMEPWPQRWMNFVVQQWTEADWAMRKFMDNLRTGMTPFMRKQPHAVHNSHDKDTNDMATCDGKSSKDHHNHQTICKALDIKKGPKKMQVRQVRIRWCLYWNEHINTVVIRLVKDVHKYKFQFGEDGKCIIQLCRCLKSHYNYINPHGQKPISLPKCCFKLEKHHDEVFYMVWTSKCPNGCPGKATCFGMQCSCNQSLDLIMRNGGFLQSWRLIGPISVEEAMWCFLKARQQNENIKEWPWHGHTSDDDMESCCCMIDTSDSMQHRCDTDGCYFSYQRHFTMHWGWMMYWDFGSNRHKMSSLNAYSIPWAERLWMPRVGKMKWTYNHQCIDCGPEEKVKSKHQSYPTRAPACKKMPPHPDHKPVEEQCYINRHTKNYSIGKHFQRRRAEPTMINEMLAQRRQVCSFEWFYYCGEHKFRTNKWHGYWQRANESHEEHCMVVWCHQGDNYAGKKLQSICECGEETHTVTRWDYQFAATAARSSEVMHDDEQEVFDPHERSKYKKHFNEGSETKCGCQYMMHQPSYMPEWVDMFVGRGARGQELSENWQWIDQPNYNWMSRTDYIIDNGSDQMSLFMLKCQYHTEHYRYVIPPIRRPPVAIFRMVPANVVNYGEILFGLNGQMKEPPYIDQIADIVPCPNENPIYLPVKFWGNKFQAIICDTLTHPGNGAVVVGEHQGTKWAMVAEKCAYYSYVDWCKVEPDEGEMYDEDSELECNWHRTMSNYNEWPGPTHERGWWTKWYDTGATSNEWEQFPCGVDLCHYWKGQDVIGSSVEVVKKVLLRPIYRDHSCYIEAPHATSPLASMCGYLFFGIHRYCLKPFKCKFYVRLCMNCAQGHHHQLCWEIYSDLHIKGKVGWNDHEWAEWESSFICWQWRQEINMANNSEKRQCIRRHDNGEEGAGRDICNKLNQVHQQTIEVCNLFKIIIAATAGEEWIEGYTCKIVDRTLSMIQDWEKNKAKVRHNNELFQKCYMKHVWMERTHVYYEYWQHMIEYCSLMVSAFGLSNFNYTDKVVRRFFAIMDHSDHTLAVVRTFAWLQKWNVWDCFNCTYHAWMQCQLDFDLGPIPHSFNDSHIKEVYYCAHYTVHYVPSKNYHEQWRKKGHPPREQPEWKSGYSSHKFPWVLQILNYLDMTIVGYDACYCILFHMLFQPFRVHYFVRPVTIEAKVIQVHEFAVLCIKEKEIGNFSQNFPWAQSEMIFTVRRRCYYVKKVAGHTLMCWRYLAELPHDDAAGYRFYSHVNEGAFILMEMHTIPLRWNCAQWNHMDQKGPAEWYHAITCFLIKTLDSCHIYGHVQAESSCYDNEILQLTVISEMDYWNCPQEKPFDANFYEMVIMPFIQSEMYNTANMRANLYLRAHGMSVYAPNVNRVKWPLDWSICMMCTKHRGSWERYVNPTDREVHWYGMTKGPMTQEPADWIVVFFCNNNLWGKWKYHHNLKMMPGLSDIYRWKRVNGMKSPDPHDMRFAHSWTDAEDFDDVDNHEAPHHWLDEHASPFYARYHHIQRNYSSTQQWRVEHYGSERAEYHESTEAEGDKNIFVQWLHMPRSGAQVCDNVMNWKRFQHGDGSYDYEHIGITKCMWKNVCFSNAEWVHDEQQNSTIKKYVTDYVKCWVHDKATNYIAAHKKHIPKIHNRATQAKYIFGNRMESSQWNWGIWPGSEKYYQLGEMMEPNIQWTTKVAFRQWPCFRVMNPRRNRRLLCIRWFYAEFNWQDHCWFNGPMCPWMVLHQSMETIHEGGDKHIPMVNFNDDNMGLVWWYFPMQPFSKTVGQVVAHGNKREQGEIEMKMKPIQKNHYYDHNCRCGVVNFVHINMVYAVTAGWFTKTKMFVEEQTGCNHARQRKDATEQTFYEWAWNHHDLASHARAFGGFVCPKMAWFIYKQEDLVYYVEAGPYAVELAWNFGGMYIYLYAHREQRHNWDHDENLAVMHLGKFQMRSGDVKAHCWYLPGLMRPMCVILFSAYRVYRPWDRQPLASWDDARGYAQLIHGYYTTWMIHNFTDMSAQMPVQKPACVGRRDDHPVPQKNGATSKLSRMTLDDYCNQRGRDIHSVNLPFNFFHSFDSWKGHVRSCKYRSEVRWAVNSCWMHTIACESIDMYEACFWEEAHGTQRTMKYHPGIHMLREATGTPPIIECIHHYYEWAYSQRMRTHVWMKNNMVEPKGHLFMRSFWHVVWKTSMSVSRDFWRIFFNVRKLGEHMNRMMTYACTYCNAEKCQILADMTQDINYIQYLMRASIGKPQEWDHYLKMQIRMWVHKMVLHDGQCKHCVFYTENNGGDRPFPDKTTISEEWFSLRQKNKKAPRGDQHWNHRMHADKSSQQLKLIQEQVVTFDYQHLDNGSRPQFAYIFGEWRWPYHWWWFKLNWTNITCREGYNNHWPCYPGALDHAHFAGDWKNVTPPQGKSIQAKRHYCAVKDMERMHQWNIVSTEWDFSHQPADWFHMWIHWYVHTRWRGHYEHMWENLYRLGMQITQWNSYWYIVWTKTMDKETMKNWHMEQDEWERNVRMSYNFKQPTIEGMRRRSCDWSDMKILISSRVIATIHSDDGLPHPCPYWSPMAQIELEFSDRVVFNKQCWWNKHFFNDHQQWMQCLMWMEYCHENNCRPNRGLLRANPYHQALAVIMWLEYVFIYNNYSAWMLTIWKKCDKAFSGKMEWKGESYMFCEACWYTWGFVKRSMTRCYGNVLPAMWWGKVYARLYEKGRHEPQWSIFQYSGFTFPDKFGWMMVHFELEMTEVMTKAANEHGRNEPNNHFEFQPSYKRGIAMGLFTWVYTRFVGKVNSVFLVFELCIFCFDENFGSMVPNVCSDGDGSISWTRNCCPPIAEASWDSAKMPNPNSGAKFGDCNKWQYDKSSMRHHPPPARWGHKQYAFATQRFGHFECNYIKTRHVYQEKHYFDCQMSFDCGTTHCCLTMEYCNVLMRRSYQAKVAKINRNRPAAAEPKLNIIVWRMHRQTAGIIKRSQTWYRLILQMSSSTRGREFYPRYNVGPYEPFWHEIGSIHPRMHVGVFGSCKCYHAAYFRPKLRPGGGLSIREVTPAEMYFQYWVQRYQRDVMANTFKKSAGAQGCLLWPYVIYRENNYTMEDCTSQKANGPWRPTPTSWMVRNVPTYYVHLSQMSEAADDHPNCSDNDDMVKWCDHVWSCFWIKEDAMYCKLIHLMRNYRKCHHSPRDIFVSKCEWAVQISMWQAWCHGFWRTEASNDDLCYVMLLTNKMHASDMCEMMDWIYMGEMNYPLEEEGKPYGKAQMKRKPSSWVFRIFMPACSMKCFFPHMGMCMLGWHMVLVCWVIKKWTELCTLHWTVFCTGGNITEQQCHCNMWCQMVCGRGSEHGSTPVVEPENESDNRIPVRYQIKMYGIQKHEEDIAETQFETAICQPPCVDHCVPLCRQRKQHCAHVNKQNRSGCFISIKFVVYHIKDFSPDNSEWKDKYEVQLYAAAWHGIQRILSVCQHIIFDGMVSTTMKEGAMTNSTASMAGKCPPIRKRLESWPNQNAWPNTNIQKYTQEQGYGGIMVDLADHHQSAFATSHGSSLIRWIVEFHR"
penalty = 1

# def read2B(filename):
#     """Read rosalind.info 2B input data"""
#     with open(filename, "r") as file:
#         string1, string2 = [line.strip() for line in file.readlines()]
#         return string1, string2

def edit_distance(string1, string2, penalty):
    dag_array = np.full((len(string2)+1, len(string1)+1), 0) #keep track of array of values
    
    #initialize first value
    dag_array[0,0] = 0
    
    #initialize values for first row in dag_array
    for i in range(1, len(string1)+1):
        dag_array[0, i] = dag_array[0,i-1]-penalty
        
    #initialize values for first column in dag_array
    for j in range(1, len(string2)+1):
        dag_array[j, 0] = dag_array[j-1, 0]-penalty
    
    for i in range(1, len(string1)+1):
        for j in range(1, len(string2)+1):
            option1 = dag_array[j-1,i]-penalty
            
            option2 = dag_array[j,i-1]-penalty
            
            option3 = dag_array[j-1,i-1] + (0 if string1[i-1] == string2[j-1] else -penalty)
            
            best_option = max(option1, option2, option3)
            dag_array[j,i] = best_option

    return dag_array[-1,-1] * -1
        

distance = edit_distance(sample_string1, sample_string2, penalty)
print(distance)